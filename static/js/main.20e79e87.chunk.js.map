{"version":3,"sources":["components/ListOfGoods/ListOfGoods.tsx","App.tsx","index.tsx"],"names":["goodsLengths","ListOfGoods","goodsFromServer","useState","start","setStart","goodsLength","setGoodsLength","isReversed","setIsReversed","sort","setSort","goodsList","useMemo","filter","good","length","a","b","localeCompare","reverse","type","className","onClick","map","htmlFor","name","id","onChange","event","target","value","App","ReactDOM","render","document","getElementById"],"mappings":"sPAOMA,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpCC,EAA+B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC7C,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAgBIC,EAAYC,mBAAQ,WACtB,OAAOX,EAAgBY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUV,OACpD,CAACA,EAAaE,EAAYE,IAqB7B,OAnBAE,EAAYC,mBAAQ,WAClB,OAAO,YAAID,GAAWF,MAAK,SAACO,EAAGC,GAC7B,OAAQR,GACN,IAAK,OACH,OAAOO,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAED,OAASE,EAAEF,OAEtB,QACE,OAAO,QAGZ,CAACV,EAAaE,EAAYE,IAE7BE,EAAYC,mBAAQ,WAClB,OAAQL,EAAc,YAAII,GAAWQ,UAA9B,YAA8CR,KACpD,CAACN,EAAaE,EAAYE,IAG3B,sCACIN,GACA,wBACEiB,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMlB,GAAS,IAH1B,wBAQDD,GACC,sBAAKkB,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACGV,EAAUY,KAAI,SAAAT,GAAI,OACjB,6BACGA,GADMA,QAKb,sBAAKO,UAAU,iBAAf,UACE,wBAAOG,QAAQ,OAAf,6CAEG,IACD,wBACEH,UAAU,gBACVI,KAAK,OACLC,GAAG,OACHC,SAAU,SAACC,GAAD,OAAWtB,GAAgBsB,EAAMC,OAAOC,QAJpD,SAMG/B,EAAawB,KAAI,SAAAR,GAAM,OACtB,wBAAQe,MAAOf,EAAf,SAAwBA,SAG3B,IAbH,gBAgBA,wBACEK,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMd,GAAeD,IAHhC,qBAOA,wBACEa,KAAK,SACLC,UAAU,SACVC,QApFM,WAChBZ,EAAQ,SAgFA,kBAOA,wBACEU,KAAK,SACLC,UAAU,SACVC,QAvFS,WACnBZ,EAAQ,WAmFA,oBAOA,wBACEU,KAAK,SACLC,UAAU,SACVC,QA1FE,WACZhB,EAAe,GACfE,GAAc,GACdE,EAAQ,KAoFA,6BC1GNT,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAUa8B,EAPO,kBACpB,sBAAKV,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,cAAC,EAAD,CAAapB,gBAAiBA,QCjBlC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.20e79e87.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport './ListOfGoods.scss';\n\ntype Props = {\n  goodsFromServer: string[]\n};\n\nconst goodsLengths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const ListOfGoods: React.FC<Props> = ({ goodsFromServer }) => {\n  const [start, setStart] = useState(false);\n  const [goodsLength, setGoodsLength] = useState(1);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sort, setSort] = useState('');\n\n  const sortByAbc = () => {\n    setSort('name');\n  };\n\n  const sortByLength = () => {\n    setSort('length');\n  };\n\n  const reset = () => {\n    setGoodsLength(1);\n    setIsReversed(false);\n    setSort('');\n  };\n\n  let goodsList = useMemo(() => {\n    return goodsFromServer.filter(good => good.length >= goodsLength);\n  }, [goodsLength, isReversed, sort]);\n\n  goodsList = useMemo(() => {\n    return [...goodsList].sort((a, b) => {\n      switch (sort) {\n        case 'name':\n          return a.localeCompare(b);\n\n        case 'length':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }, [goodsLength, isReversed, sort]);\n\n  goodsList = useMemo(() => {\n    return (isReversed) ? [...goodsList].reverse() : [...goodsList];\n  }, [goodsLength, isReversed, sort]);\n\n  return (\n    <>\n      {!start && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setStart(true)}\n        >\n          Show goods\n        </button>\n      )}\n      {start && (\n        <div className=\"goods\">\n          <ul className=\"goods__list\">\n            {goodsList.map(good => (\n              <li key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n          <div className=\"goods__buttons\">\n            <label htmlFor=\"good\">\n              Show only goods having more than\n              {' '}\n              <select\n                className=\"goods__select\"\n                name=\"good\"\n                id=\"good\"\n                onChange={(event) => setGoodsLength(+event.target.value)}\n              >\n                {goodsLengths.map(length => (\n                  <option value={length}>{length}</option>\n                ))}\n              </select>\n              {' '}\n              letter(s).\n            </label>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={sortByAbc}\n            >\n              Name\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={sortByLength}\n            >\n              Length\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { ListOfGoods } from './components/ListOfGoods/ListOfGoods';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">List of goods:</h1>\n    <ListOfGoods goodsFromServer={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}